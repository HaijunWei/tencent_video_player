// Autogenerated from Pigeon (v1.0.8), do not edit directly.
// See also: https://pub.dev/packages/pigeon
#import <Foundation/Foundation.h>
@protocol FlutterBinaryMessenger;
@protocol FlutterMessageCodec;
@class FlutterError;
@class FlutterStandardTypedData;

NS_ASSUME_NONNULL_BEGIN

typedef NS_ENUM(NSUInteger, HJPlayerType) {
  HJPlayerTypeVod = 0,
  HJPlayerTypeLive = 1,
};

typedef NS_ENUM(NSUInteger, HJLiveType) {
  HJLiveTypeRtmp = 0,
  HJLiveTypeFlv = 1,
};

@class HJTextureMessage;
@class HJCreateMessage;
@class HJPlayMessage;
@class HJLoopingMessage;
@class HJVolumeMessage;
@class HJPlaybackSpeedMessage;
@class HJPositionMessage;
@class HJSnapshotMessage;

@interface HJTextureMessage : NSObject
@property(nonatomic, strong, nullable) NSNumber * textureId;
@end

@interface HJCreateMessage : NSObject
@property(nonatomic, assign) HJPlayerType type;
@end

@interface HJPlayMessage : NSObject
@property(nonatomic, strong, nullable) NSNumber * textureId;
@property(nonatomic, assign) HJLiveType liveType;
@property(nonatomic, copy, nullable) NSString * uri;
@property(nonatomic, copy, nullable) NSString * asset;
@property(nonatomic, copy, nullable) NSString * packageName;
@end

@interface HJLoopingMessage : NSObject
@property(nonatomic, strong, nullable) NSNumber * textureId;
@property(nonatomic, strong, nullable) NSNumber * isLooping;
@end

@interface HJVolumeMessage : NSObject
@property(nonatomic, strong, nullable) NSNumber * textureId;
@property(nonatomic, strong, nullable) NSNumber * volume;
@end

@interface HJPlaybackSpeedMessage : NSObject
@property(nonatomic, strong, nullable) NSNumber * textureId;
@property(nonatomic, strong, nullable) NSNumber * speed;
@end

@interface HJPositionMessage : NSObject
@property(nonatomic, strong, nullable) NSNumber * textureId;
@property(nonatomic, strong, nullable) NSNumber * position;
@end

@interface HJSnapshotMessage : NSObject
@property(nonatomic, copy, nullable) NSString * path;
@end

/// The codec used by HJTencentVideoPlayerApi.
NSObject<FlutterMessageCodec> *HJTencentVideoPlayerApiGetCodec(void);

@protocol HJTencentVideoPlayerApi
- (nullable HJTextureMessage *)createMsg:(HJCreateMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
- (void)playMsg:(HJPlayMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
- (void)resumeMsg:(HJTextureMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
- (void)pauseMsg:(HJTextureMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
- (void)stopMsg:(HJTextureMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
- (void)seekToMsg:(HJPositionMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
- (void)setLoopingMsg:(HJLoopingMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
- (void)setVolumeMsg:(HJVolumeMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
- (void)setPlaybackSpeedMsg:(HJPlaybackSpeedMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
- (void)snapshotMsg:(nullable HJTextureMessage *)msg completion:(void(^)(HJSnapshotMessage *_Nullable, FlutterError *_Nullable))completion;
- (void)disposeMsg:(HJTextureMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
@end

extern void HJTencentVideoPlayerApiSetup(id<FlutterBinaryMessenger> binaryMessenger, NSObject<HJTencentVideoPlayerApi> *_Nullable api);

NS_ASSUME_NONNULL_END
